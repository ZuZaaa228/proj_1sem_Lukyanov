import sqlite3 as sq


goods = [
    (0, 'Молоко', 'Описание молока', 'литр'),
    (0, 'Кефир', 'Описание кефира', 'литр'),
    (0, 'Вода', 'Описание воды', 'литр'),
    (0, 'Газировка', 'Описание газировки', 'литр'),
    (0, 'Колбаса', 'Описание колбасы', 'грамм'),
    (0, 'Сыр', 'Описание сыра', 'грамм'),
    (0, 'Чипсы', 'Описание чипсов', 'грамм'),
    (0, 'Сухарики', 'Описание сухариков', 'грамм'),
    (0, 'Суп', 'Описание супа', 'литр'),
    (0, 'Мята', 'Описание мяты', 'грамм'),
    (0, 'Помидоры', 'Описание помидоров', 'шт'),
    (0, 'Огурцы', 'Описание огурцов', 'шт'),
    (0, 'Зелень', 'Описание зелени', 'грамм'),
    (0, 'Рыба', 'Описание рыбы', 'грамм'),
    (0, 'Мясо Курицы', 'Описание мяса', 'грамм'),
]


with sq.connect('baze.db') as con:
    con.execute("PRAGMA foreign_keys = ON")
    cur = con.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS Товары(
        id_tov integer PRIMARY KEY AUTOINCREMENT,
        Название varchar,
        Описание varchar,
        Единица измерения varchar
    )""")
    cur.execute("""CREATE TABLE IF NOT EXISTS Магазины (
        id_маг integer PRIMARY KEY AUTOINCREMENT,
        Название varchar,
        Адрес varchar,
        Телефон varchar
)   """)
    cur.execute("""CREATE TABLE IF NOT EXISTS "Заявки магазинов" (
        id_заяв integer PRIMARY KEY AUTOINCREMENT,
        Дата заявки date,
        id_маг integer
    )""")
    cur.execute("""CREATE TABLE IF NOT EXISTS "Количество товаров на складе" (
        id_кол integer PRIMARY KEY AUTOINCREMENT,
        Количество integer,
        id_тов integer
    )""")
    cur.execute("""CREATE TABLE IF NOT EXISTS Состав (
        id_сост integer PRIMARY KEY AUTOINCREMENT,
        Количество integer,
        id_заяв integer,
        id_тов integer
    )""")

    cur.executemany('INSERT INTO Товары VALUES (?, ?, ?, ?)', goods)
#     1. SELECT * FROM Товары;
# 2. SELECT * FROM Магазины;
# 3. SELECT id_магазина, дата_заявки FROM "Заявки магазинов";
# 4. SELECT id_товара, количество FROM "Количество товаров на складе";
# 5. SELECT id_товара, количество FROM "Количество товаров на складе" ORDER BY количество DESC;
# 6. SELECT "Заявки магазинов".id, id_товара FROM "Заявки магазинов" JOIN "Состав" ON "Заявки магазинов".id = "Состав".id_заявки;
# 7. SELECT id, название FROM Товары JOIN "Количество товаров на складе" ON Товары.id = "Количество товаров на складе".id_товара WHERE количество < Товары.минимально_допустимое_количество;
# 8. SELECT * FROM "Заявки магазинов" WHERE дата_заявки BETWEEN 'начальная дата' AND 'конечная дата';
# 9. SELECT Магазины.id, SUM("Количество товаров на складе".количество) as total FROM Магазины JOIN "Заявки магазинов" ON Магазины.id = "Заявки магазинов".id_магазина JOIN "Состав" ON "Заявки магазинов".id = "Состав".id_заявки JOIN "Количество товаров на складе" ON "Состав".id_товара = "Количество товаров на складе".id_товара GROUP BY Магазины.id HAVING total < заданное значение;

# 1. UPDATE "Количество товаров на складе" SET количество = <новое количество> WHERE id_товара = <идентификатор товара>
# 2. UPDATE "Заявки магазинов" SET название_товара = <новое название> WHERE id = <идентификатор заявки>
# 3. UPDATE "Состав" SET количество = <новое количество> WHERE id_заявки = <идентификатор заявки> AND id_товара = <идентификатор товара>
# 4. UPDATE "Заявки магазинов" SET адрес_магазина = <новый адрес> WHERE id_магазина = <идентификатор магазина>
# 5. UPDATE "Заявки магазинов" SET дата_заявки = <новая дата> WHERE id_магазина = <идентификатор магазина>
# 6. UPDATE "Количество товаров на складе" SET количество = <новое количество> WHERE id_товара IN (<идентификатор товара 1>, <идентификатор товара 2>, ...)
# 7. UPDATE "Товары" SET описание = <новое описание>, количество = <новое количество> WHERE id = <идентификатор товара>
# 8. UPDATE "Количество товаров на складе" SET количество = количество - <количество выполненной заявки> WHERE id_товара IN (SELECT id_товара FROM "Состав" WHERE id_заявки = <идентификатор заявки>)
# 9. UPDATE "Количество товаров на складе" SET количество = количество - <количество выполненной заявки> WHERE id_товара = <идентификатор товара> AND id IN (SELECT id FROM "Состав" WHERE id_заявки = <идентификатор заявки>)
# 10. UPDATE "Заявки магазинов" SET название_магазина = <новое название>, адрес_магазина = <новый адрес> WHERE id = <идентификатор заявки>
# 11. UPDATE "Заявки магазинов" SET название_магазина = <новое название> WHERE id_магазина = <идентификатор магазина>
# 12. UPDATE "Состав" SET количество = <новое количество>, адрес_магазина = <новый адрес> WHERE id_заявки = <идентификатор заявки> AND id_товара = <идентификатор товара>
# 13. UPDATE "Товары" SET описание = <новое описание>, количество = <новое количество> WHERE id IN (<идентификатор товара 1>, <идентификатор товара 2>, ...)

# 2. DELETE FROM "Заявки магазинов" WHERE id = {id_заявки};
#    DELETE FROM "Состав" WHERE id_заявки = {id_заявки};
# 3. DELETE FROM "Количество товаров на складе" WHERE id_товара NOT IN (SELECT id_товара FROM "Состав");
# 4. DELETE FROM "Заявки магазинов" WHERE адрес LIKE "ул. Ленина%";
# 5. DELETE FROM "Состав" WHERE id_товара NOT IN (SELECT id_товара FROM "Количество товаров на складе" WHERE количество > 0);
# 6. DELETE FROM "Магазины" WHERE id NOT IN (SELECT id_магазина FROM "Заявки магазинов" WHERE дата_заявки >= date('now','-1 month'));
# 7. DELETE FROM "Товары" WHERE id NOT IN (SELECT id_товара FROM "Состав");
# 8. DELETE FROM "Количество товаров на складе" WHERE id_товара NOT IN (SELECT id_товара FROM "Состав");
# 9. DELETE FROM "Состав" WHERE id_заявки IN (SELECT id FROM "Заявки магазинов" WHERE дата_заявки < date('now','-1 month'));

# INSERT INTO Товары (название, описание, единица измерения) VALUES
# ('Шоколад', 'Молочный шоколад с добавлением миндаля', 'грамм'),
# ('Сыр', 'Твердый сорт сыра из коровьего молока', 'килограмм'),
# ('Хлеб', 'Свежеиспеченный белый хлеб', 'штука'),
# ('Сок', 'Натуральный апельсиновый сок', 'литр'),
# ('Мороженое', 'Ванильное мороженое со вкусом карамели', 'грамм'),
# ('Яблоки', 'Сорт яблок Гала', 'килограмм'),
# ('Консервы', 'Консервы из говядины', 'банка'),
# ('Рис', 'Отборный басмати', 'килограмм'),
# ('Колбаса', 'Колбаса из мяса кур', 'килограмм'),
# ('Свинина', 'Свинина на кости', 'килограмм');

# INSERT INTO Магазины (название, адрес, телефон) VALUES
# ('Алмазный', 'ул. Ленина, 10', '+7 (495) 123-45-67'),
# ('Мир продуктов', 'ул. Пушкина, 5', '+7 (495) 234-56-78'),
# ('Океан', 'пр-т Мира, 20', '+7 (495) 345-67-89'),
# ('Пятёрочка', 'ул. Садовая, 2', '+7 (495) 456-78-90');

# INSERT INTO Заявки_магазинов (id_магазина, дата_заявки) VALUES
# (1, '2021-08-01'),
# (2, '2021-08-03'),
# (3, '2021-08-05'),
# (4, '2021-08-07');

# INSERT INTO Количество_товаров_на_складе (id_товара, количество) VALUES
# (1, 1000),
# (2, 200),
# (3, 500),
# (4, 100),
# (5, 300),
# (6, 100),
# (7, 50),
# (8, 400),
# (9, 100),
# (10, 300);

# INSERT INTO Состав (id_заявки, id_товара, количество) VALUES
# (1, 1, 200),
# (1, 5, 100),
# (1, 6, 50),
# (2, 2, 50),
# (2, 7, 10),
# (2, 8, 100),
# (3, 3, 200),
# (3, 4, 50),
# (3, 9, 50),
# (4, 2, 150),
# (4, 10, 150);
